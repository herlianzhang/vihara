module(name = "vihara", version = "0.0.1")

_COMPOSE_VERSION = "1.6.3"

_COMPOSE_COMPILER_VERSION = "1.5.8"

_KOTLIN_COMPILER_VERSION = "1.9.22"

bazel_dep(name = "rules_jvm_external", version = "6.0")
bazel_dep(name = "rules_kotlin", version = "1.9.1")
bazel_dep(name = "rules_java", version = "7.5.0")
bazel_dep(name = "rules_android", version = "0.1.1")

bazel_dep(name = "rules_xcodeproj", version = "1.16.0")
bazel_dep(name = "rules_apple", version = "3.3.0", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "rules_swift", version = "1.16.0", repo_name = "build_bazel_rules_swift")
bazel_dep(name = "apple_support", version = "1.13.0", repo_name = "build_bazel_apple_support")
bazel_dep(name = "rules_swift_package_manager", version = "0.28.0")

bazel_dep(name = "rules_go", version = "0.46.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.35.0")
bazel_dep(name = "rules_proto", version = "6.0.0-rc2")

bazel_dep(name = "aspect_rules_lint", version = "0.12.0")
bazel_dep(name = "aspect_rules_js", version = "1.37.1")
bazel_dep(name = "aspect_rules_swc", version = "1.1.0")
bazel_dep(name = "aspect_rules_ts", version = "2.1.1")
bazel_dep(name = "bazel_skylib", version = "1.5.0")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.jetbrains.kotlin:kotlin-stdlib:{}".format(_KOTLIN_COMPILER_VERSION),
        "androidx.core:core-ktx:1.12.0",
        "androidx.appcompat:appcompat:1.6.1",
        "androidx.activity:activity-compose:1.7.0",
        "androidx.emoji2:emoji2:1.3.0",
        "androidx.compose.material3:material3:1.2.1",
        "androidx.lifecycle:lifecycle-runtime:2.6.1",
        "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1",
        "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1",
        "androidx.compose.material:material-icons-core:1.6.0",
        "androidx.compose.material:material-ripple:1.6.0",
        "androidx.compose.ui:ui:{}".format(_COMPOSE_VERSION),
        "androidx.compose.ui:ui-tooling:{}".format(_COMPOSE_VERSION),
        "androidx.compose.ui:ui-graphics:{}".format(_COMPOSE_VERSION),
        "androidx.compose.foundation:foundation:{}".format(_COMPOSE_VERSION),
        "androidx.compose.compiler:compiler:{}".format(_COMPOSE_COMPILER_VERSION),
        "androidx.compose.runtime:runtime:{}".format(_COMPOSE_VERSION),
        "androidx.collection:collection:1.4.0",
        "androidx.credentials:credentials:1.2.1",
        "androidx.credentials:credentials-play-services-auth:1.2.1",
        "com.google.android.libraries.identity.googleid:googleid:1.1.0",
        "com.squareup.retrofit2:retrofit:2.9.0",
        "com.squareup.retrofit2:converter-gson:2.9.0",
        "com.google.code.gson:gson:2.10.1",
        "com.jakewharton.timber:timber:5.0.1",
        "androidx.activity:activity-ktx:1.7.0",
        "com.github.chuckerteam.chucker:library:4.0.0",
        "com.squareup.okhttp3:okhttp:4.12.0",
        "com.squareup.okhttp3:logging-interceptor:4.12.0",
        "androidx.test:core:1.1.0",
        "com.google.dagger:dagger-compiler:2.51",
        "com.google.dagger:dagger-android-processor:2.51",
        "com.google.dagger:dagger-android:2.51",
        "com.google.dagger:dagger-android-support:2.51",
        "androidx.navigation:navigation-compose:2.7.7",
        "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.1",
        "androidx.lifecycle:lifecycle-runtime-compose:2.6.1",
        "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1",
    ],
    repositories = [
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
        "https://oss.sonatype.org/content/repositories/snapshots",
    ],
    lock_file = "//android:maven_install.json",
    version_conflict_policy = "pinned",
)
use_repo(maven, "maven", "unpinned_maven")

go_sdk = use_extension(
    "@io_bazel_rules_go//go:extensions.bzl", 
    "go_sdk"
)
go_sdk.download(version = "1.21.5")
use_repo(
    go_sdk,
    "go_toolchains",
    "io_bazel_rules_nogo"
)

register_toolchains("@go_toolchains//:all")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//backend:go.mod")

use_repo(
    go_deps,
    "com_github_gin_gonic_gin",
    "com_github_golang_jwt_jwt_v5",
    "com_github_lestrrat_go_jwx_v2",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "com_github_jackc_pgx_v5",
    "com_github_go_playground_validator_v10",
    "com_github_joho_godotenv",
)

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm", dev_dependency = True)
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//frontend:.npmrc",
    pnpm_lock = "//frontend:pnpm-lock.yaml",
    public_hoist_packages = {
        "eslint-config-react-app": ["frontend/admin"],
        "eslint@8.56": ["frontend/admin"],
    },
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

# swift_deps START
swift_deps = use_extension(
    "@rules_swift_package_manager//:extensions.bzl",
    "swift_deps",
)
swift_deps.from_file(
    deps_index = "//ios:swift_deps_index.json",
)
use_repo(
    swift_deps,
    "swiftpkg_googlesignin_ios",
)
# swift_deps END