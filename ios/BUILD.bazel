load(
    "@rules_xcodeproj//xcodeproj:defs.bzl",
    "top_level_target",
    "xcode_provisioning_profile",
    "xcodeproj",
)
load(
    "@build_bazel_rules_apple//apple:ios.bzl",
    "ios_unit_test",
)
load(
    "@build_bazel_rules_apple//apple:apple.bzl",
    "apple_dynamic_xcframework_import",
    "local_provisioning_profile",
)
load(":Extension.bzl", "ios_app", "team_id")
load("@gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@rules_swift_package_manager//swiftpkg:defs.bzl", "swift_update_packages")

xcodeproj(
    name = "xcodeproj",
    project_name = "App",
    scheme_autogeneration_mode = "all",
    tags = ["manual"],
    top_level_targets = [
        top_level_target(
            ":App",
            target_environments = [
                "device",
                "simulator",
            ],
        ),
        ":Tests",
    ],
)

ios_app(
    name = "App",
    provisioning_profile = ":xcode_development_profile",
)

ios_app(
    name = "DeployApp",
    provisioning_profile = ":xcode_appstore_profile",
)

apple_dynamic_xcframework_import(
    name = "AppAuth",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    xcframework_imports = glob(["Carthage/Build/AppAuth.xcframework/**"]),
)

ios_unit_test(
    name = "Tests",
    bundle_id = "pro.herlian.vihara.tests",
    minimum_os_version = "15.0",
    test_host = ":App",
    visibility = ["//visibility:public"],
    deps = ["//ios/Test"],
)

# AppStore Profile
local_provisioning_profile(
    name = "local_appstore_profile",
    profile_name = "match AppStore pro.herlian.vihara",
    team_id = team_id,
)

xcode_provisioning_profile(
    name = "xcode_appstore_profile",
    managed_by_xcode = True,
    provisioning_profile = ":local_appstore_profile",
    team_id = team_id,
)

# Development Profile
local_provisioning_profile(
    name = "local_development_profile",
    profile_name = "match Development pro.herlian.vihara",
    team_id = team_id,
)

xcode_provisioning_profile(
    name = "xcode_development_profile",
    managed_by_xcode = True,
    provisioning_profile = ":local_development_profile",
    team_id = team_id,
)

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@rules_swift_package_manager//gazelle",
    ],
)

swift_update_packages(
    name = "swift_update_pkgs",
    gazelle = ":gazelle_bin",
    generate_swift_deps_for_workspace = False,
    package_manifest = "ios/Package.swift",
    swift_deps_index = "ios/swift_deps_index.json",
    update_bzlmod_stanzas = True,
)

gazelle(
    name = "update_build_files",
    gazelle = ":gazelle_bin",
)
